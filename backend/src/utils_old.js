//all that has deal with questions
const questions = require('./questions'); //import questions from questions.js
const { Random } = require('random-js'); //import random from random-js library

const getRandomQuestion = (topic) => { //topic - a theme from array of questions, getRandomQuestion - what has user chosen
    console.log("üì• getRandomQuestion –≤—ã–∑–≤–∞–Ω–∞ —Å —Ç–µ–º–æ–π:", topic);

    const random = new Random(); //create a new random object
    const questionTopic = topic.toLowerCase();

    const topicQuestions = questions[questionTopic];

    if (!topicQuestions) {
        console.error("‚ùå –û—à–∏–±–∫–∞: –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ questions:", questionTopic);
        console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:", Object.keys(questions));
        throw new Error(`–¢–µ–º–∞ '${questionTopic}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }

    const randomQuestionIndex = random.integer(0, topicQuestions.length - 1); //get random number from 0 to the length of the array - 1

    console.log(`üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∏–Ω–¥–µ–∫—Å: ${randomQuestionIndex}, –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: ${topicQuestions.length}`);

    return topicQuestions[randomQuestionIndex]; //return the question from the array
};

const getCorrectAnswer = (topic, id) => {
    console.log("üì• getCorrectAnswer –≤—ã–∑–≤–∞–Ω–∞ —Å —Ç–µ–º–æ–π:", topic, "–∏ ID –≤–æ–ø—Ä–æ—Å–∞:", id);

    const topicQuestions = questions[topic];

    if (!topicQuestions) {
        console.error("‚ùå –û—à–∏–±–∫–∞: –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ questions:", topic);
        console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:", Object.keys(questions));
        throw new Error(`–¢–µ–º–∞ '${topic}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    }

    const question = topicQuestions.find((question) => question.id === id);

    if (!question) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: –í–æ–ø—Ä–æ—Å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–º–µ '${topic}'`);
        console.log("üìù –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö ID –≤ —Ç–µ–º–µ:", topicQuestions.map(q => q.id));
        throw new Error(`–í–æ–ø—Ä–æ—Å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    if (!question.hasOptions) {
        console.log("‚úÖ –í–æ–ø—Ä–æ—Å –±–µ–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞. –û—Ç–≤–µ—Ç:", question.answer);
        return question.answer; //if the question has no options, return the answer
    }

    const correctOption = question.options?.find((o) => o.isCorrect);

    if (!correctOption) {
        console.error(`‚ùå –û—à–∏–±–∫–∞: –í –≤–æ–ø—Ä–æ—Å–µ ID ${id} –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (isCorrect: true)`);
        console.log("üîç –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:", question.options);
        throw new Error(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    console.log("‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:", correctOption.text);
    return correctOption.text; //if the question has options, find the option with isCorrect = true and return it
};

module.exports = { getRandomQuestion, getCorrectAnswer }; //need to export function to use it in index.js
